name: test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install latest stable Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
    - name: Install SQLx
      run: cargo install sqlx-cli --no-default-features --features native-tls,sqlite || true
    - name: Setup SQLite
      run: |
        touch db.sqlite
        cp .env.development .env
    - name: Run SQLite migrations
      run: sqlx migrate run
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run lint
      run: cargo fmt --all -- --check
    - name: Install cargo audit
      run: cargo install cargo-audit || true
    - name: Run cargo audit
      run: cargo audit
